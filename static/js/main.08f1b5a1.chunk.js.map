{"version":3,"sources":["utils/api.js","components/SearchBar/SearchBar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","App.js","reportWebVitals.js","index.js"],"names":["getPictures","query","page","axios","get","then","response","data","hits","SearchBar","state","value","submitHandler","evt","preventDefault","props","onSubmit","setState","changeHandler","target","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","src","alt","modal_src","showModal","onClick","ImageGallery","images","imageClickhandler","map","image","webformatURL","tags","largeImageURL","id","Button","clickHandler","Loader","propTypes","PreLoader","style","marginLeft","marginRight","color","height","width","Modal","keyDownHandler","e","code","toggleModal","overlayClickHandler","currentTarget","window","addEventListener","removeEventListener","App","gallery","loading","searchQuery","modalImage","searchImages","PicturesApi","prevState","scrollOnLoad","catch","error","console","log","finally","prevProps","scrollTo","top","document","documentElement","scrollHeight","behavior","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.08f1b5a1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default function getPictures(query, page) {\r\n  const URL = \"https://pixabay.com/api/\";\r\n  const key = \"20000566-16ad290e26d22769e71a22f3e\";\r\n  const per_page = 12;\r\n  return axios\r\n    .get(\r\n      `${URL}?q=${query}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=${per_page}\r\n`\r\n    )\r\n    .then((response) => response.data.hits);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"../styles.css\";\r\n\r\nexport default class SearchBar extends Component {\r\n  state = {\r\n    value: \"\",\r\n  };\r\n\r\n  submitHandler = (evt) => {\r\n    evt.preventDefault();\r\n    this.props.onSubmit(this.state.value);\r\n    this.setState({ value: \"\" });\r\n  };\r\n\r\n  changeHandler = (evt) => {\r\n    const { value } = evt.target;\r\n    this.setState({ value: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.submitHandler}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.changeHandler}\r\n            value={this.state.value}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({ src, alt, modal_src, showModal }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={src}\r\n        alt={alt}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={() => showModal(modal_src, alt)}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ images, imageClickhandler }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\" >\r\n      {images.map((image) => {\r\n        return (\r\n          <ImageGalleryItem\r\n            key={image.id}\r\n            src={image.webformatURL}\r\n            alt={image.tags}\r\n            modal_src={image.largeImageURL}\r\n            showModal={imageClickhandler}/>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  imagePicker: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\nimport \"../styles.css\";\r\n\r\nconst Button = ({ clickHandler }) => {\r\n  return (\r\n    <button\r\n      className=\"Button\"\r\n      type=\"button\"\r\n      onClick={clickHandler}\r\n      // onClick={() => {\r\n      //   window.scrollTo({\r\n      //     top: document.documentElement.scrollHeight,\r\n      //     behavior: \"smooth\",\r\n      //   });\r\n      // }}\r\n    >\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\n// window.scrollTo({\r\n//   top: document.documentElement.scrollHeight,\r\n//   behavior: \"smooth\",\r\n// });\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst PreLoader = (props) => {\r\n  return (\r\n    <Loader\r\n      style={{ marginLeft: \"auto\", marginRight: \"auto\" }}\r\n      type=\"TailSpin\"\r\n      color=\"#3f51b5\"\r\n      height={300}\r\n      width={300}\r\n    />\r\n  );\r\n};\r\n\r\nLoader.propTypes = {};\r\n\r\nexport default PreLoader;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../styles.css\";\r\n\r\nexport default class Modal extends Component {\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.keyDownHandler);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.keyDownHandler);\r\n  }\r\n\r\n  keyDownHandler = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.toggleModal();\r\n    }\r\n  };\r\n\r\n  overlayClickHandler = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      this.props.toggleModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {src, alt} = this.props.image\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.overlayClickHandler}>\r\n        <div className=\"Modal\">\r\n          <img src={src} alt={alt} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  image: PropTypes.object,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport PicturesApi from \"./utils/api\";\r\nimport SearchBar from \"./components/SearchBar/SearchBar\";\r\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\r\nimport Button from \"./components/Button/Button\";\r\nimport PreLoader from \"./components/Loader/Loader\";\r\nimport Modal from \"./components/Modal/Modal\";\r\nimport \"./components/styles.css\";\r\n\r\nexport default class App extends Component {\r\n  static propTypes = {\r\n    gallery: PropTypes.array,\r\n    loading: PropTypes.bool,\r\n    searchQuery: PropTypes.string,\r\n    page: PropTypes.number,\r\n    showModal: PropTypes.bool,\r\n    modalImage: PropTypes.object,\r\n  };\r\n\r\n  state = {\r\n    gallery: [],\r\n    loading: false,\r\n    searchQuery: \"\",\r\n    page: 1,\r\n    showModal: false,\r\n    modalImage: {\r\n      src: \"\",\r\n      alt: \"\",\r\n    },\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevQuery = prevState.searchQuery;\r\n    const nextQuery = this.state.searchQuery;\r\n\r\n    if (prevQuery !== nextQuery) {\r\n      this.searchImages();\r\n    }\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  scrollOnLoad() {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n  }\r\n\r\n  searchImages = () => {\r\n    const { searchQuery, page } = this.state;\r\n    this.setState({ loading: true });\r\n\r\n    PicturesApi(searchQuery, page)\r\n      .then((images) =>\r\n        this.setState(\r\n          (prevState) => ({\r\n            gallery: [...prevState.gallery, ...images],\r\n            page: prevState.page + 1,\r\n          }),\r\n          this.scrollOnLoad\r\n        )\r\n      )\r\n      .catch((error) => console.log(error))\r\n      .finally(() => this.setState({ loading: false }));\r\n  };\r\n\r\n  imageClickhandler = (src, alt) => {\r\n    this.toggleModal();\r\n    this.setState({\r\n      modalImage: { src, alt },\r\n    });\r\n  };\r\n\r\n  submitHandler = (query) => {\r\n    this.setState({ searchQuery: query, page: 1, gallery: [] });\r\n  };\r\n\r\n  render() {\r\n    const { gallery, loading, showModal, modalImage } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        {showModal && (\r\n          <Modal image={modalImage} toggleModal={this.toggleModal} />\r\n        )}\r\n        <SearchBar onSubmit={this.submitHandler} />\r\n\r\n        {gallery.length > 0 && (\r\n          <ImageGallery\r\n            images={gallery}\r\n            imageClickhandler={this.imageClickhandler}\r\n          />\r\n        )}\r\n\r\n        {loading && <PreLoader />}\r\n\r\n        {gallery.length > 0 && !loading && (\r\n          <Button clickHandler={this.searchImages} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}